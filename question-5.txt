#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>

#define PORT 8080

int main() {
    int sock = 0;
    struct sockaddr_in serv_addr;
    int number;
    int is_prime;

    // Create socket file descriptor
    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
        printf("\n Socket creation error \n");
        return -1;
    }

    // Configure server address settings
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(PORT);

    // Convert IPv4 and IPv6 addresses from text to binary form
    if (inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr) <= 0) {
        printf("\nInvalid address/ Address not supported \n");
        return -1;
    }

    // Connect to the server
    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {
        printf("\nConnection Failed \n");
        return -1;
    }

    // Get a number from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Send the number to the server
    send(sock, &number, sizeof(number), 0);
    printf("Number %d sent to the server\n", number);

    // Receive the result from the server
    recv(sock, &is_prime, sizeof(is_prime), 0);
    printf("Received result from the server: %s\n", is_prime ? "Prime" : "Not Prime");

    return 0;
}
